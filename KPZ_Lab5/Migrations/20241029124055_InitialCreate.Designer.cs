// <auto-generated />
using System;
using KPZ_lab5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KPZ_lab5.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241029124055_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KPZ_lab5.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("BookStatus")
                        .HasColumnType("int");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("KPZ_lab5.Models.ContributorHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<int>("ContributorStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ContributorId");

                    b.ToTable("ContributorHistories");
                });

            modelBuilder.Entity("KPZ_lab5.Models.PrintingHouse", b =>
                {
                    b.Property<int>("PrintingHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrintingHouseId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PrintingHouseId");

                    b.ToTable("PrintingHouses");
                });

            modelBuilder.Entity("KPZ_lab5.Models.PrintingHouseBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PrintingHouseId")
                        .HasColumnType("int");

                    b.Property<int>("BooksQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId", "PrintingHouseId");

                    b.HasIndex("PrintingHouseId");

                    b.ToTable("PrintingHouseBooks");
                });

            modelBuilder.Entity("KPZ_lab5.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamMemberId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("TeamMemberId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("KPZ_lab5.Models.Text", b =>
                {
                    b.Property<int>("TextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TextId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("AuthorSurname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("TextId");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("KPZ_lab5.Models.TextBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("TextId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "TextId");

                    b.HasIndex("TextId");

                    b.ToTable("TextBooks");
                });

            modelBuilder.Entity("KPZ_lab5.Models.ContributorHistory", b =>
                {
                    b.HasOne("KPZ_lab5.Models.Book", "Book")
                        .WithMany("ContributorHistories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KPZ_lab5.Models.TeamMember", "Contributor")
                        .WithMany("ContributorHistories")
                        .HasForeignKey("ContributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Contributor");
                });

            modelBuilder.Entity("KPZ_lab5.Models.PrintingHouseBook", b =>
                {
                    b.HasOne("KPZ_lab5.Models.Book", "Book")
                        .WithMany("PrintingHouseBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KPZ_lab5.Models.PrintingHouse", "PrintingHouse")
                        .WithMany("PrintingHouseBooks")
                        .HasForeignKey("PrintingHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("PrintingHouse");
                });

            modelBuilder.Entity("KPZ_lab5.Models.TextBook", b =>
                {
                    b.HasOne("KPZ_lab5.Models.Book", "Book")
                        .WithMany("TextBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KPZ_lab5.Models.Text", "Text")
                        .WithMany("TextBooks")
                        .HasForeignKey("TextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Text");
                });

            modelBuilder.Entity("KPZ_lab5.Models.Book", b =>
                {
                    b.Navigation("ContributorHistories");

                    b.Navigation("PrintingHouseBooks");

                    b.Navigation("TextBooks");
                });

            modelBuilder.Entity("KPZ_lab5.Models.PrintingHouse", b =>
                {
                    b.Navigation("PrintingHouseBooks");
                });

            modelBuilder.Entity("KPZ_lab5.Models.TeamMember", b =>
                {
                    b.Navigation("ContributorHistories");
                });

            modelBuilder.Entity("KPZ_lab5.Models.Text", b =>
                {
                    b.Navigation("TextBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
